generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Gender {
  MALE
  FEMALE
}

model User {
  id             String       @id @default(uuid())
  email          String       @unique
  password       String
  name           String
  gender         String
  phone          String?
  image          String?
  is_online      Boolean      @default(false)
  last_seen      DateTime?
  socket_id      String?
  created_at     DateTime     @default(now())
  updated_at     DateTime     @updatedAt
  chat_room_user ThreadUser[]
  sent_messages  Message[]

  @@map("users")
}

model Thread {
  id           String       @id @default(uuid())
  name         String?
  created_at   DateTime     @default(now())
  updated_at   DateTime     @updatedAt
  messages     Message[]
  participants ThreadUser[]

  @@map("threads")
}

model Message {
  id         String   @id @default(uuid())
  content    String
  sender_id  String
  thread_id  String
  file_url   String?
  edited     Boolean  @default(false)
  deleted    Boolean  @default(false)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  thread Thread @relation(fields: [thread_id], references: [id])
  sender User   @relation(fields: [sender_id], references: [id])

  @@map("messages")
}

model ThreadUser {
  id         String   @id @default(uuid())
  thread_id  String
  user_id    String
  created_at DateTime @default(now())

  room Thread @relation(fields: [thread_id], references: [id], onDelete: Cascade)
  user User   @relation(fields: [user_id], references: [id])

  @@unique([thread_id, user_id])
  @@map("thread_user")
}
